<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
    </parent>

    <groupId>serol</groupId>
    <artifactId>jooq-try</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <properties>
        <java.version>11</java.version>
        <testcontainers.version>1.13.0</testcontainers.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>run-liquibase</id>
            <properties>
                <db.driver>org.postgresql.Driver</db.driver>
                <db.url>jdbc:postgresql://localhost:5432/postgres</db.url>
                <db.username>postgres</db.username>
                <db.password>docker</db.password>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <version>3.8.8</version>
                        <configuration>
                            <changeLogFile>${basedir}/src/main/resources/liquibase/changelog.xml</changeLogFile>
                            <driver>${db.driver}</driver>
                            <url>${db.url}</url>
                            <username>${db.username}</username>
                            <password>${db.password}</password>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>run-jooq</id>
            <properties>
                <db.driver>org.postgresql.Driver</db.driver>
                <db.url>jdbc:postgresql://localhost:5432/postgres</db.url>
                <db.username>postgres</db.username>
                <db.password>docker</db.password>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <version>${jooq.version}</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <!-- https://www.jooq.org/doc/3.13/manual/code-generation/codegen-configuration/ -->
                                <configuration>
                                    <jdbc>
                                        <driver>${db.driver}</driver>
                                        <url>${db.url}</url>
                                        <user>${db.username}</user>
                                        <password>${db.password}</password>
                                    </jdbc>
                                    <generator>
                                        <name>org.jooq.codegen.JavaGenerator</name>
                                        <database>
                                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                                            <inputSchema>jooqtry</inputSchema>
                                            <includes>.*</includes>
                                            <excludes></excludes>
                                        </database>
                                        <target>
                                            <packageName>serol.jooqtry.database.jooq</packageName>
                                            <directory>src/main/java</directory>
                                        </target>
                                        <generate>
                                            <pojos>true</pojos>
                                            <immutablePojos>true</immutablePojos>
                                            <pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
                                        </generate>
                                    </generator>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
